knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(flexdashboard)
x <- c("sqldf", "tidyverse", "RcppRoll", "ggthemes", "moments", "gridExtra", "broom", "viridis",
"ggsci","ggstance", "cowplot", "wesanderson", "kableExtra", "formattable", "UpSetR")
lapply(x, require, character.only = TRUE) ##applying the function require to each point in the vector x
options(scipen = 999)
#data processing step
gdpdef <- as_tibble(read.csv("C:/Users/brian/Dropbox/COCA/DATA/GMRI_aggregated data/GDPDEF.csv", header = TRUE))
##geo table
geo_table <- as_tibble(read.csv("C:/Users/brian/Dropbox/COCA/DATA/GMRI_aggregated data/geo_table.csv", header = TRUE))
##raw landings file
#byport_thin <- as_tibble(read.csv("//LAZ/Shared/Research/2015_2018_COCA/2_Data/Basic Info/Data/raw_data/byport_thin.csv", header = TRUE))
all_port_landings <- as_tibble(read.csv("C:/Users/brian/Dropbox/COCA/DATA/GMRI_aggregated data/byport_thin.csv",
header = TRUE)) %>%
left_join(., gdpdef, by = c("YEAR" = "year")) %>%
left_join(., geo_table, by = c("PORT_CODE")) %>%
mutate(value_2009 = (value / GDPDEF) * 100) %>%
na.omit() %>%
rename(spp = SPECIES, year = YEAR)
#summary ports
all_port_spp <- all_port_landings %>%
group_by(year, port_tidy, spp) %>%
summarise(spp_value = sum(value),
spp_value_2009 = sum(value_2009),
lbs = sum(lbs))
top_x_port <- function(a, b) ##processing function
{
filter <- all_port_spp %>% filter(port_tidy == a)
top <- filter %>%
group_by(year) %>%
top_n(5, spp_value) %>% #top 5 most frequent
arrange(year, desc(spp_value))
spp_list <- top %>% group_by(spp) %>%
count(spp) %>% ungroup() %>%
top_n(b, n) #taking top n (b) most frequent top 5 species
top_list <- filter %>%
group_by(spp) %>%
mutate(
spp_10 = case_when(
!spp %in% spp_list$spp ~ "Other", #if not on the list you can't get it in
TRUE ~ as.character(spp))) #if on list then spp = spp_10
#defining variables for lapply
years <- c(seq(min(top$year), max(top$year), by = 1)) #vector to run through
spp <- unique(top_list$spp_10)
n_spp = length(spp)
bind <- function(years) {
cbind(year = rep(years, n_spp), # n of years = n of species
fake =rep(0, n_spp), # of 0s = n of species
spp)
}
#apply function
fake_list <- lapply(years, bind)
#converting list to dataframe
fake_df <- as_tibble(do.call(rbind.data.frame, fake_list)) %>%
mutate(
year = as.numeric(as.character(year)),
fake = as.numeric(as.character(fake)),
spp = as.character(spp))
top_10_sum <- top_list %>%
group_by(year, spp_10) %>%
summarise(
value = sum(spp_value),
value_2009 = sum(spp_value_2009),
volume = sum(lbs)) %>%
right_join(. , fake_df, by = c("year" = "year", "spp_10" = "spp")) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), 0, .))) ##replacing NA w/ zeros
return(data.frame(top_10_sum))
}
top_10_sum <- top_x_port(params$port_alt, params$top)
#sensible output!!!
top_prop <- top_10_sum %>%
group_by(year) %>%
summarise(total_value = sum(value)) %>%
ungroup() %>%
left_join(., top_10_sum, by = "year") %>%
group_by(spp_10, year) %>%
mutate(prop = (value / total_value)) %>%
arrange(year)
##issue arising from years in which one of the 'top species' does not appear.
totals_df <- top_10_sum %>% group_by(year) %>%
summarize(total_value = sum(value),
total_2009 = sum(value_2009),
total_volume = sum(volume))
head(all_port_spp)
port_year <- all_port_spp %>%
group_by(year, port_tidy) %>%
mutate(total_value = sum(spp_value_2009)) %>%
distinct(year, port_tidy, total_value) %>%
arrange(port_tidy, year, total_value)
#spp * boat * year
spp_port_year <- cfders_raw %>%
group_by(year, spp, port_tidy) %>%
mutate(value = sum(spp_value_2009)) %>%
distinct(year, spp, port_tidy, value) %>%
arrange(port_tidy, year, value)
boat_index_calc <- left_join(port_year, spp_port_year,
by = c("year" = "year", "port_tidy" = "port_tidy")) %>%
mutate(temp_index = (value / total_value)^2) %>%
group_by(year, port_tidy) %>%
mutate(index = 1/ sum(temp_index)) %>%
distinct(year, port_tidy, total_value, index) %>%
arrange(port_tidy, year) %>% na.omit()
spp_port_year <- all_port_spp %>%
group_by(year, spp, port_tidy) %>%
mutate(value = sum(spp_value_2009)) %>%
distinct(year, spp, port_tidy, value) %>%
arrange(port_tidy, year, value)
#index calculation
port_index_calc <- left_join(port_year, spp_port_year,
by = c("year" = "year", "port_tidy" = "port_tidy")) %>%
mutate(temp_index = (value / total_value)^2) %>%
group_by(year, port_tidy) %>%
mutate(index = 1/ sum(temp_index)) %>%
distinct(year, port_tidy, total_value, index) %>%
arrange(port_tidy, year) %>% na.omit()
View(port_index_calc)
#index calculation
port_index_calc <- left_join(port_year, spp_port_year,
by = c("year" = "year", "port_tidy" = "port_tidy")) %>%
mutate(temp_index = (value / total_value)^2) %>%
group_by(year, port_tidy) %>%
mutate(index = 1/ sum(temp_index),
rev_var = roll_sd(total_value, 5, na.rm = TRUE, align = "right", fill =NA),
rev_mean = roll_mean(total_value, 5, na.rm = TRUE, align = "right", fill = NA),
rev_cv = rev_var / rev_mean) %>%
distinct(year, port_tidy, total_value, index) %>%
arrange(port_tidy, year) %>% na.omit()
View(port_index_calc)
port_index_calc <- left_join(port_year, spp_port_year,
by = c("year" = "year", "port_tidy" = "port_tidy")) %>%
mutate(temp_index = (value / total_value)^2) %>%
group_by(year, port_tidy) %>%
mutate(index = 1/ sum(temp_index),
rev_var = roll_sd(total_value, 5, na.rm = TRUE, align = "right", fill =NA),
rev_mean = roll_mean(total_value, 5, na.rm = TRUE, align = "right", fill = NA),
rev_cv = rev_var / rev_mean) %>%
distinct(year, port_tidy, total_value, index, rev_cv) %>%
arrange(port_tidy, year) %>% na.omit()
port_index_calc <- left_join(port_year, spp_port_year,
by = c("year" = "year", "port_tidy" = "port_tidy")) %>%
mutate(temp_index = (value / total_value)^2) %>%
group_by(year, port_tidy) %>%
mutate(index = 1/ sum(temp_index)) %>% ungroup() %>%
group_by(port_tidy) %>%
mutate(
rev_var = roll_sd(total_value, 5, na.rm = TRUE, align = "right", fill =NA),
rev_mean = roll_mean(total_value, 5, na.rm = TRUE, align = "right", fill = NA),
rev_cv = rev_var / rev_mean) %>%
distinct(year, port_tidy, total_value, index, rev_cv) %>%
arrange(port_tidy, year) %>% na.omit()
port_index_calc <- left_join(port_year, spp_port_year,
by = c("year" = "year", "port_tidy" = "port_tidy")) %>%
mutate(temp_index = (value / total_value)^2) %>%
group_by(year, port_tidy) %>%
mutate(index = 1/ sum(temp_index)) %>%
group_by(port_tidy) %>%
mutate(
rev_var = roll_sd(total_value, 5, na.rm = TRUE, align = "right", fill =NA),
rev_mean = roll_mean(total_value, 5, na.rm = TRUE, align = "right", fill = NA),
rev_cv = rev_var / rev_mean) %>%
distinct(year, port_tidy, total_value, index, rev_cv) %>%
arrange(port_tidy, year) %>% na.omit()
port_index_calc <- left_join(port_year, spp_port_year,
by = c("year" = "year", "port_tidy" = "port_tidy")) %>%
mutate(temp_index = (value / total_value)^2) %>%
group_by(year, port_tidy) %>%
mutate(index = 1/ sum(temp_index)) %>%
distinct(year, port_tidy, total_value, index, rev_cv) %>%
arrange(port_tidy, year) %>% na.omit()
temp_vol_file <- port_index_calc %>% ungroup() %>% group_by(port_tidy) %>%
mutate(
rev_var = roll_sd(total_value, 5, na.rm = TRUE, align = "right", fill =NA),
rev_mean = roll_mean(total_value, 5, na.rm = TRUE, align = "right", fill = NA),
rev_cv = rev_var / rev_mean)
View(temp_vol_file)
cv_div_input_file <- port_index_calc %>% ungroup() %>% group_by(port_tidy) %>%
mutate(
rev_var = roll_sd(total_value, 4, na.rm = TRUE, align = "right", fill =NA),
rev_mean = roll_mean(total_value, 4, na.rm = TRUE, align = "right", fill = NA),
rev_cv = rev_var / rev_mean) %>%
filter(port_tidy == params$port_alt) %>%
filter(year > (min(year) + 3))
View(cv_div_input_file)
#volatility calculation
cv_div_input_file <- port_index_calc %>% ungroup() %>% group_by(port_tidy) %>%
mutate(
rev_var = roll_sd(total_value, 4, na.rm = TRUE, align = "right", fill =NA),
rev_mean = roll_mean(total_value, 4, na.rm = TRUE, align = "right", fill = NA),
rev_cv = rev_var / rev_mean) %>%
filter(port_tidy == params$port_alt) %>%
filter(year > (min(year) + 2))
cv_div_input_file <- port_index_calc %>% ungroup() %>% group_by(port_tidy) %>%
mutate(
rev_var = roll_sd(total_value, 4, na.rm = TRUE, align = "right", fill =NA),
rev_mean = roll_mean(total_value, 4, na.rm = TRUE, align = "right", fill = NA),
rev_cv = rev_var / rev_mean) %>%
filter(port_tidy == params$port_alt) %>%
filter(year > (min(year) + 1))
cv_div_input_file <- port_index_calc %>% ungroup() %>% group_by(port_tidy) %>%
mutate(
rev_var = roll_sd(total_value, 4, na.rm = TRUE, align = "right", fill =NA),
rev_mean = roll_mean(total_value, 4, na.rm = TRUE, align = "right", fill = NA),
rev_cv = rev_var / rev_mean) %>%
filter(port_tidy == params$port_alt) %>%
filter(year > (min(year) + 2))
trend_diversity <- ggplot(cv_div_input_file, aes(year, index)) +
geom_line(color = "black", size = 1.2) +
theme_bw() +
labs(title = paste(params$port,": Revenue Diversity", sep =""),
subtitle = "Using Inverse Simpons Diversity Index") +
scale_y_continuous(name = "Diversity Index") + expand_limits(y=0) +
scale_x_continuous(breaks = seq(min(top_prop$year), max(top_prop$year), by = 8))+
theme(axis.title.x = element_blank())
trend_volume
trend_diversity <- ggplot(cv_div_input_file, aes(year, index)) +
geom_line(color = "black", size = 1.2) +
theme_bw() +
labs(title = paste(params$port,": Revenue Diversity", sep =""),
subtitle = "Using Inverse Simpons Diversity Index") +
scale_y_continuous(name = "Diversity Index") + expand_limits(y=0) +
scale_x_continuous(breaks = seq(min(top_prop$year), max(top_prop$year), by = 8))+
theme(axis.title.x = element_blank())
trend_diversity
trend_volatility <- ggplot(cv_div_input_file, aes(year, rev_cv)) +
geom_line(color = "black", size = 1.2) +
theme_bw() +
labs(title = paste(params$port,": Revenue Volatility", sep =""),
subtitle = "Using four year rolling CV of annual revenues") +
scale_y_continuous(name = "CV of Revenues") + expand_limits(y=0) +
scale_x_continuous(breaks = seq(min(top_prop$year), max(top_prop$year), by = 8))+
theme(axis.title.x = element_blank())
trend_volatility
